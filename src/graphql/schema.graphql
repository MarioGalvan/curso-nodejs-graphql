type Query {
  hello: String!
  hello2: String
  person(name: String, age: Int): String
  getBoolean: Boolean
  getId: ID
  getFloat: Float
  getNumbers(numbers: [Int!]!): [Int]
  product(id: ID!): Product
  products: [Product]
  allcategorys:[Category]
}

type Mutation {
  addProduct(dto: CreateProductInput!): Product!
  updateProduct(id: ID, dto: UpdateProductInput!): Product
  deleteProduct(id:ID):String
  login(email:String!, password:String!):AuthResponse
  addCategory(name:String!, image:String!):Category
  deleteCategory(id:ID):ID
}

type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  createdAt: String!
  category:Category!
  categoryId:ID!
}

input CreateProductInput {
  id: ID!
  name: String!
  description: String!
  price: Int!
  image: String!
  categoryId: ID!
}

input CreateCategoryInput{
  name:String!
  image:String!
}

input UpdateProductInput {
  name: String
  description: String
  price: Int
  image: String
}


type Category{
  id:ID!
  name:String!
  image:String!
}


type AuthResponse{
  access_token:String!
  user:User
}

type User{
  email:String!
  id:ID!
  rol: String
  createdAt: String!
}

